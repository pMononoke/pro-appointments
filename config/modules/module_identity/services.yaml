# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

        bind:
            CompostDDD\ApplicationService\ApplicationService $registerUserUseCase: '@Identity\Transational\RegisterUserService'
            CompostDDD\ApplicationService\ApplicationService $changeNameUserUseCase: '@Identity\Transational\ChangeNameService'
            #CompostDDD\ApplicationService\ApplicationService $deleteUserService: '@Identity\Transational\DeleteUserService'
            #CompostDDD\ApplicationService\ApplicationService $changeFirstNameService: '@Identity\Transational\ChangeFirstNameService'
            #CompostDDD\ApplicationService\ApplicationService $changePasswordService: '@Identity\Transational\ChangePasswordService'


    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    ProAppointments\IdentityAccess\Infrastructure\Symfony\Controller\:
        resource: '../../../proAppointments/IdentityAccess/src/Infrastructure/Symfony/Controller'
        tags: ['controller.service_arguments']

    ProAppointments\IdentityAccess\Infrastructure\Symfony\Form\:
        resource: '../../../proAppointments/IdentityAccess/src/Infrastructure/Symfony/Form/'

    #
    #   SYSTEM CLOCK
    #
    app.date_time_zone:
        class: DateTimeZone
        arguments:
            - 'UTC'

    app.clock.system:
        class: CompostDDD\Time\SystemClock
        arguments:
            - '@app.date_time_zone'
        public: true

    #
    #   DOMAIN SERVICE
    #
    ProAppointments\IdentityAccess\Domain\Service\DomainRegistry: '@ProAppointments\IdentityAccess\Infrastructure\DomainService\DomainRegistry'
    ProAppointments\IdentityAccess\Infrastructure\DomainService\DomainRegistry:
        calls:
            - method: 'setContainer'
              arguments:
                  - '@service_container'

    ProAppointments\IdentityAccess\Domain\Identity\UserFactory:

    ProAppointments\IdentityAccess\Infrastructure\DomainService\PasswordEncoderSymfony:
        arguments:
            - '@security.password_encoder'
        public: true

    ProAppointments\IdentityAccess\Domain\Service\UniqueRoleName\UniqueRoleName:
        arguments:
            - '@ProAppointments\IdentityAccess\Infrastructure\Persistence\Doctrine\Query\UniqueRoleNameQuery'

    ProAppointments\IdentityAccess\Domain\Service\UniqueUserEmail\UniqueUserEmail:
        arguments:
            - '@ProAppointments\IdentityAccess\Infrastructure\Persistence\Doctrine\Query\UniqueUserEmailQuery'
        public: true

    ProAppointments\IdentityAccess\Infrastructure\Persistence\Adapter\UserRepositoryAdapter:
        arguments:
            - '@ProAppointments\IdentityAccess\Infrastructure\Persistence\Doctrine\DoctrineUserRepository'
            - '@ProAppointments\IdentityAccess\Infrastructure\Notification\DoctrineEventStore'

    ProAppointments\IdentityAccess\Infrastructure\Persistence\Adapter\RoleRepositoryAdapter:
        arguments:
            - '@ProAppointments\IdentityAccess\Infrastructure\Persistence\Doctrine\DoctrineRoleRepository'
            - '@ProAppointments\IdentityAccess\Infrastructure\Notification\DoctrineEventStore'


    #
    #   (WRITE SIDE) APPLICATION SERVICE &  TRANSACTIONAL APPLICATION SERVICES
    #
    identity.transactional.session:
        class: CompostDDD\ApplicationService\DoctrineSession
        arguments:
            - '@doctrine.orm.entity_manager'

    ProAppointments\IdentityAccess\Infrastructure\Factories\ApplicationServiceFactory: ~

    ProAppointments\IdentityAccess\Application\UserUseCase\RegisterUserService:
        arguments:
            - '@ProAppointments\IdentityAccess\Infrastructure\Persistence\Adapter\UserRepositoryAdapter'

    Identity\Transational\RegisterUserService:
        factory: ['@ProAppointments\IdentityAccess\Infrastructure\Factories\ApplicationServiceFactory', 'createTransationalApplicationService']
        arguments:
            - '@ProAppointments\IdentityAccess\Application\UserUseCase\RegisterUserService'
            - '@identity.transactional.session'


    ProAppointments\IdentityAccess\Application\UserUseCase\ChangeNameService:
        arguments:
            - '@ProAppointments\IdentityAccess\Infrastructure\Persistence\Adapter\UserRepositoryAdapter'
    Identity\Transational\ChangeNameService:
        factory: ['@ProAppointments\IdentityAccess\Infrastructure\Factories\ApplicationServiceFactory', 'createTransationalApplicationService']
        arguments:
            - '@ProAppointments\IdentityAccess\Application\UserUseCase\ChangeNameService'
            - '@identity.transactional.session'


    ProAppointments\IdentityAccess\Application\UserUseCase\DeleteUserService:
        arguments:
            - '@ProAppointments\IdentityAccess\Infrastructure\Persistence\Adapter\UserRepositoryAdapter'

    Identity\Transational\DeleteUserService:
        factory: ['@ProAppointments\IdentityAccess\Infrastructure\Factories\ApplicationServiceFactory', 'createTransationalApplicationService']
        arguments:
            - '@ProAppointments\IdentityAccess\Application\UserUseCase\DeleteUserService'
            - '@identity.transactional.session'

    ProAppointments\IdentityAccess\Application\UserUseCase\ChangeFirstNameService:
        arguments:
            - '@ProAppointments\IdentityAccess\Infrastructure\Persistence\Adapter\UserRepositoryAdapter'

    Identity\Transational\ChangeFirstNameService:
        factory: ['@ProAppointments\IdentityAccess\Infrastructure\Factories\ApplicationServiceFactory', 'createTransationalApplicationService']
        arguments:
            - '@ProAppointments\IdentityAccess\Application\UserUseCase\ChangeFirstNameService'
            - '@identity.transactional.session'

    ProAppointments\IdentityAccess\Application\UserUseCase\ChangePasswordService:
        arguments:
            - '@ProAppointments\IdentityAccess\Infrastructure\Persistence\Adapter\UserRepositoryAdapter'

    Identity\Transational\ChangePasswordService:
        factory: ['@ProAppointments\IdentityAccess\Infrastructure\Factories\ApplicationServiceFactory', 'createTransationalApplicationService']
        arguments:
            - '@ProAppointments\IdentityAccess\Application\UserUseCase\ChangePasswordService'
            - '@identity.transactional.session'

    #
    #   (READ SIDE) APPLICATION SERVICE &  TRANSACTIONAL APPLICATION SERVICES
    #
    ProAppointments\IdentityAccess\Application\UserViewCase\MyAccountVewCase:
        arguments:
            - '@ProAppointments\IdentityAccess\Infrastructure\Persistence\Doctrine\Query\UserAccountQuery'

    #
    #   UI PRESENTATION LAYER
    #
#    ProAppointments\IdentityAccess\UI\Cli\:
#        resource: '../../../proAppointments/IdentityAccess/src/UI/Cli'
#        tags:
#            - { name: 'console.command' }


    #
    #   INFRASTUCTURE LAYER
    #


    # User persistence
    ProAppointments\IdentityAccess\Infrastructure\Persistence\Doctrine\DoctrineUserRepository:

    ProAppointments\IdentityAccess\Infrastructure\Persistence\Doctrine\Query\UniqueUserEmailQuery:

    ProAppointments\IdentityAccess\Infrastructure\Persistence\Doctrine\Query\UserQuery:
        public: true

    ProAppointments\IdentityAccess\Infrastructure\Persistence\Doctrine\Query\UsersQuery:
        public: true

    ProAppointments\IdentityAccess\Infrastructure\Persistence\Doctrine\Query\UserAccountQuery:




    # Role persistence
    ProAppointments\IdentityAccess\Infrastructure\Persistence\Doctrine\DoctrineRoleRepository:

    ProAppointments\IdentityAccess\Infrastructure\Persistence\Doctrine\Query\UniqueRoleNameQuery:

    ProAppointments\IdentityAccess\Infrastructure\Persistence\Doctrine\Query\RoleQuery:















#
#
#   DOMAIN EVENT NOTIFIER STUFF
#
    ProAppointments\IdentityAccess\Infrastructure\Notification\DoctrineEventStore:
        public: true


